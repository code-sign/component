/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!******************!*\
  !*** ./entry.js ***!
  \******************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Select = __webpack_require__(/*! ../index.js */ 1);
	
	var options = {
	  selectedIndex: 2,
	  values: [
	    "a",
	    "b",
	    "c" 
	  ],
	  id: 'my-select',
	  onchange: function() {
	    console.log(" Changeeeeeeeeeee " + this.id);
	    //alert(this.selectedIndex);
	  },
	  style: {
	    height: '40px', 
	    width: '100px'
	  }
	};
	
	options['style'] = {
	  class: "table table-bordered"
	}
	var st = new Select(options);
	st.mountToElementById('container');
	
	setTimeout(function() {
	  st.reRender(['abc', 'efg', 'hig']);
	}, 10000);
	
	setInterval(function() {
	  st.addOption(Math.random());
	  st.triggerOnChange();
	}, 15000);


/***/ },
/* 1 */
/*!*******************!*\
  !*** ../index.js ***!
  \*******************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(/*! ./lib/select */ 2);


/***/ },
/* 2 */
/*!************************!*\
  !*** ../lib/select.js ***!
  \************************/
/***/ function(module, exports) {

	'use strict';
	
	/*
	 * @options = {
	 *  id: 
	 *  values: 
	 *  onchange: 
	 * }
	 */
	var select = function(options) {
	  /*
	   * constructor
	   */
	  this.values = options.values;
	  this.style = options.style;
	  this.id = options.id;
	  this.onchange = options.onchange;
	
	  this.domNode = document.createElement('select');
	  this.domNode.id = this.id;
	
	  for (var st in this.style) {
	    if (this.style.hasOwnProperty(st)) {
	      if (st === 'class')  {
	        var classes = this.style[st].split(' ');
	        var domNode = this.domNode;
	        classes.forEach(function(klass) {
	          domNode.classList.add(klass); 
	        });
	      } else {
	        this.domNode.style[st] = this.style[st];
	      }
	    }
	  }
	
	  for (var i = -1; i < this.values.length; i++) {
	    if (i === -1) {
	      var eleOption = document.createElement('option'); 
	      eleOption.value = '';
	      eleOption.textContent = '';
	      this.domNode.appendChild(eleOption);
	    } else {
	      var eleOption = document.createElement('option'); 
	      eleOption.value = this.values[i];
	      eleOption.textContent = this.values[i];
	      this.domNode.appendChild(eleOption);
	    }
	  }
	
	  this.domNode.onchange = this.onchange;
	
	  function _fireEvent(element,event){
	    if (document.createEventObject){
	    // dispatch for IE
	      var evt = document.createEventObject();
	      return element.fireEvent('on' + event,evt)
	    } else {
	    // dispatch for firefox + others
	      var evt = document.createEvent("HTMLEvents");
	      evt.initEvent(event, true, true ); // event type,bubbling,cancelable
	      return !element.dispatchEvent(evt);
	    }
	  }
	
	  /* 
	   * if enable selectedIndex, set it and trigger onchange
	   */
	  if (options.selectedIndex) {
	    this.domNode.selectedIndex = options.selectedIndex; 
	    _fireEvent(this.domNode, 'change');
	  } else {
	    this.domNode.selectedIndex = 0;
	    _fireEvent(this.domNode, 'change');
	  }
	
	  /*
	   * APIs
	   */
	  this.htmlNode = this.domNode;
	
	  this.triggerOnChange = function() {
	    _fireEvent(this.domNode, 'change'); 
	  };
	
	  this.mountToElementById = function(eleId) { 
	    var node = document.getElementById(eleId); 
	    node && node.appendChild(this.domNode);
	  };
	
	  this.unmountToElementById = function(eleId) {
	    var node = document.getElementById(eleId); 
	    node && node.removeChild(this.domNode);
	  };
	    
	  this.mountToElement = function(ele) {
	    ele && ele.appendChild(this.domNode);    
	  };
	
	  this.addOption = function(value) {
	    var eleOption = document.createElement('option'); 
	    eleOption.value = value;
	    eleOption.textContent = value;
	    this.domNode.appendChild(eleOption);
	  };
	
	  this.reRender = function(values) {
	    /*
	     * remove old options
	     */
	    this.domNode.options.length = 0; 
	
	    /*
	     * create new options with new values
	     */
	    for (var i = -1; i < values.length; i++) {
	      if (i === -1) {
	        var eleOption = document.createElement('option'); 
	        eleOption.value = '';
	        eleOption.textContent = '';
	        this.domNode.appendChild(eleOption);
	      } else {
	        var eleOption = document.createElement('option'); 
	        eleOption.value = values[i];
	        eleOption.textContent = values[i];
	        this.domNode.appendChild(eleOption);
	      }
	    }
	  };
	}
	
	module.exports = select;


/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map